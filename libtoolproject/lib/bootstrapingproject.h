/* bootstrapingproject.h generated by valac 0.20.1, the Vala compiler, do not modify */


#ifndef __BOOTSTRAPINGPROJECT_H__
#define __BOOTSTRAPINGPROJECT_H__

#include <glib.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <gtk/gtk.h>
#include <gio/gio.h>
#include <gee.h>

G_BEGIN_DECLS


#define BOOTSTRAPINGPROJECT_FACTORIES_TYPE_ABSTRACT_MAIN (bootstrapingproject_factories_abstract_main_get_type ())
#define BOOTSTRAPINGPROJECT_FACTORIES_ABSTRACT_MAIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOOTSTRAPINGPROJECT_FACTORIES_TYPE_ABSTRACT_MAIN, BootstrapingprojectFactoriesAbstractMain))
#define BOOTSTRAPINGPROJECT_FACTORIES_ABSTRACT_MAIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOOTSTRAPINGPROJECT_FACTORIES_TYPE_ABSTRACT_MAIN, BootstrapingprojectFactoriesAbstractMainClass))
#define BOOTSTRAPINGPROJECT_FACTORIES_IS_ABSTRACT_MAIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOOTSTRAPINGPROJECT_FACTORIES_TYPE_ABSTRACT_MAIN))
#define BOOTSTRAPINGPROJECT_FACTORIES_IS_ABSTRACT_MAIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOOTSTRAPINGPROJECT_FACTORIES_TYPE_ABSTRACT_MAIN))
#define BOOTSTRAPINGPROJECT_FACTORIES_ABSTRACT_MAIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOOTSTRAPINGPROJECT_FACTORIES_TYPE_ABSTRACT_MAIN, BootstrapingprojectFactoriesAbstractMainClass))

typedef struct _BootstrapingprojectFactoriesAbstractMain BootstrapingprojectFactoriesAbstractMain;
typedef struct _BootstrapingprojectFactoriesAbstractMainClass BootstrapingprojectFactoriesAbstractMainClass;
typedef struct _BootstrapingprojectFactoriesAbstractMainPrivate BootstrapingprojectFactoriesAbstractMainPrivate;

#define BOOTSTRAPINGPROJECT_FACTORIES_TYPE_FACTORY (bootstrapingproject_factories_factory_get_type ())
#define BOOTSTRAPINGPROJECT_FACTORIES_FACTORY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOOTSTRAPINGPROJECT_FACTORIES_TYPE_FACTORY, BootstrapingprojectFactoriesFactory))
#define BOOTSTRAPINGPROJECT_FACTORIES_FACTORY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOOTSTRAPINGPROJECT_FACTORIES_TYPE_FACTORY, BootstrapingprojectFactoriesFactoryClass))
#define BOOTSTRAPINGPROJECT_FACTORIES_IS_FACTORY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOOTSTRAPINGPROJECT_FACTORIES_TYPE_FACTORY))
#define BOOTSTRAPINGPROJECT_FACTORIES_IS_FACTORY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOOTSTRAPINGPROJECT_FACTORIES_TYPE_FACTORY))
#define BOOTSTRAPINGPROJECT_FACTORIES_FACTORY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOOTSTRAPINGPROJECT_FACTORIES_TYPE_FACTORY, BootstrapingprojectFactoriesFactoryClass))

typedef struct _BootstrapingprojectFactoriesFactory BootstrapingprojectFactoriesFactory;
typedef struct _BootstrapingprojectFactoriesFactoryClass BootstrapingprojectFactoriesFactoryClass;
typedef struct _BootstrapingprojectFactoriesFactoryPrivate BootstrapingprojectFactoriesFactoryPrivate;

#define BOOTSTRAPINGPROJECT_TYPE_MAIN_CONTROLLER (bootstrapingproject_main_controller_get_type ())
#define BOOTSTRAPINGPROJECT_MAIN_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOOTSTRAPINGPROJECT_TYPE_MAIN_CONTROLLER, BootstrapingprojectMainController))
#define BOOTSTRAPINGPROJECT_MAIN_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOOTSTRAPINGPROJECT_TYPE_MAIN_CONTROLLER, BootstrapingprojectMainControllerClass))
#define BOOTSTRAPINGPROJECT_IS_MAIN_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOOTSTRAPINGPROJECT_TYPE_MAIN_CONTROLLER))
#define BOOTSTRAPINGPROJECT_IS_MAIN_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOOTSTRAPINGPROJECT_TYPE_MAIN_CONTROLLER))
#define BOOTSTRAPINGPROJECT_MAIN_CONTROLLER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOOTSTRAPINGPROJECT_TYPE_MAIN_CONTROLLER, BootstrapingprojectMainControllerClass))

typedef struct _BootstrapingprojectMainController BootstrapingprojectMainController;
typedef struct _BootstrapingprojectMainControllerClass BootstrapingprojectMainControllerClass;
typedef struct _BootstrapingprojectMainControllerPrivate BootstrapingprojectMainControllerPrivate;

#define BOOTSTRAPINGPROJECT_WIDGETS_TYPE_MAIN_WINDOW (bootstrapingproject_widgets_main_window_get_type ())
#define BOOTSTRAPINGPROJECT_WIDGETS_MAIN_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOOTSTRAPINGPROJECT_WIDGETS_TYPE_MAIN_WINDOW, BootstrapingprojectWidgetsMainWindow))
#define BOOTSTRAPINGPROJECT_WIDGETS_MAIN_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOOTSTRAPINGPROJECT_WIDGETS_TYPE_MAIN_WINDOW, BootstrapingprojectWidgetsMainWindowClass))
#define BOOTSTRAPINGPROJECT_WIDGETS_IS_MAIN_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOOTSTRAPINGPROJECT_WIDGETS_TYPE_MAIN_WINDOW))
#define BOOTSTRAPINGPROJECT_WIDGETS_IS_MAIN_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOOTSTRAPINGPROJECT_WIDGETS_TYPE_MAIN_WINDOW))
#define BOOTSTRAPINGPROJECT_WIDGETS_MAIN_WINDOW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOOTSTRAPINGPROJECT_WIDGETS_TYPE_MAIN_WINDOW, BootstrapingprojectWidgetsMainWindowClass))

typedef struct _BootstrapingprojectWidgetsMainWindow BootstrapingprojectWidgetsMainWindow;
typedef struct _BootstrapingprojectWidgetsMainWindowClass BootstrapingprojectWidgetsMainWindowClass;

#define BOOTSTRAPINGPROJECT_SYSTEM_TYPE_PATHS (bootstrapingproject_system_paths_get_type ())
#define BOOTSTRAPINGPROJECT_SYSTEM_PATHS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOOTSTRAPINGPROJECT_SYSTEM_TYPE_PATHS, BootstrapingprojectSystemPaths))
#define BOOTSTRAPINGPROJECT_SYSTEM_PATHS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOOTSTRAPINGPROJECT_SYSTEM_TYPE_PATHS, BootstrapingprojectSystemPathsClass))
#define BOOTSTRAPINGPROJECT_SYSTEM_IS_PATHS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOOTSTRAPINGPROJECT_SYSTEM_TYPE_PATHS))
#define BOOTSTRAPINGPROJECT_SYSTEM_IS_PATHS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOOTSTRAPINGPROJECT_SYSTEM_TYPE_PATHS))
#define BOOTSTRAPINGPROJECT_SYSTEM_PATHS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOOTSTRAPINGPROJECT_SYSTEM_TYPE_PATHS, BootstrapingprojectSystemPathsClass))

typedef struct _BootstrapingprojectSystemPaths BootstrapingprojectSystemPaths;
typedef struct _BootstrapingprojectSystemPathsClass BootstrapingprojectSystemPathsClass;
typedef struct _BootstrapingprojectSystemPathsPrivate BootstrapingprojectSystemPathsPrivate;

#define BOOTSTRAPINGPROJECT_SYSTEM_TYPE_LOG_LEVEL (bootstrapingproject_system_log_level_get_type ())

#define BOOTSTRAPINGPROJECT_SYSTEM_TYPE_LOGGER (bootstrapingproject_system_logger_get_type ())
#define BOOTSTRAPINGPROJECT_SYSTEM_LOGGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOOTSTRAPINGPROJECT_SYSTEM_TYPE_LOGGER, BootstrapingprojectSystemLogger))
#define BOOTSTRAPINGPROJECT_SYSTEM_LOGGER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOOTSTRAPINGPROJECT_SYSTEM_TYPE_LOGGER, BootstrapingprojectSystemLoggerClass))
#define BOOTSTRAPINGPROJECT_SYSTEM_IS_LOGGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOOTSTRAPINGPROJECT_SYSTEM_TYPE_LOGGER))
#define BOOTSTRAPINGPROJECT_SYSTEM_IS_LOGGER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOOTSTRAPINGPROJECT_SYSTEM_TYPE_LOGGER))
#define BOOTSTRAPINGPROJECT_SYSTEM_LOGGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOOTSTRAPINGPROJECT_SYSTEM_TYPE_LOGGER, BootstrapingprojectSystemLoggerClass))

typedef struct _BootstrapingprojectSystemLogger BootstrapingprojectSystemLogger;
typedef struct _BootstrapingprojectSystemLoggerClass BootstrapingprojectSystemLoggerClass;
typedef struct _BootstrapingprojectSystemLoggerPrivate BootstrapingprojectSystemLoggerPrivate;
typedef struct _BootstrapingprojectWidgetsMainWindowPrivate BootstrapingprojectWidgetsMainWindowPrivate;

#define BOOTSTRAPINGPROJECT_WIDGETS_TYPE_COMPOSITED_WINDOW (bootstrapingproject_widgets_composited_window_get_type ())
#define BOOTSTRAPINGPROJECT_WIDGETS_COMPOSITED_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BOOTSTRAPINGPROJECT_WIDGETS_TYPE_COMPOSITED_WINDOW, BootstrapingprojectWidgetsCompositedWindow))
#define BOOTSTRAPINGPROJECT_WIDGETS_COMPOSITED_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BOOTSTRAPINGPROJECT_WIDGETS_TYPE_COMPOSITED_WINDOW, BootstrapingprojectWidgetsCompositedWindowClass))
#define BOOTSTRAPINGPROJECT_WIDGETS_IS_COMPOSITED_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BOOTSTRAPINGPROJECT_WIDGETS_TYPE_COMPOSITED_WINDOW))
#define BOOTSTRAPINGPROJECT_WIDGETS_IS_COMPOSITED_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BOOTSTRAPINGPROJECT_WIDGETS_TYPE_COMPOSITED_WINDOW))
#define BOOTSTRAPINGPROJECT_WIDGETS_COMPOSITED_WINDOW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BOOTSTRAPINGPROJECT_WIDGETS_TYPE_COMPOSITED_WINDOW, BootstrapingprojectWidgetsCompositedWindowClass))

typedef struct _BootstrapingprojectWidgetsCompositedWindow BootstrapingprojectWidgetsCompositedWindow;
typedef struct _BootstrapingprojectWidgetsCompositedWindowClass BootstrapingprojectWidgetsCompositedWindowClass;
typedef struct _BootstrapingprojectWidgetsCompositedWindowPrivate BootstrapingprojectWidgetsCompositedWindowPrivate;

struct _BootstrapingprojectFactoriesAbstractMain {
	GObject parent_instance;
	BootstrapingprojectFactoriesAbstractMainPrivate * priv;
	GtkApplication* application;
	gchar* build_pkg_data_dir;
	gchar* program_name;
	gchar* exec_name;
};

struct _BootstrapingprojectFactoriesAbstractMainClass {
	GObjectClass parent_class;
	gint (*run) (BootstrapingprojectFactoriesAbstractMain* self, gchar*** args, int* args_length1);
	void (*initialize_program) (BootstrapingprojectFactoriesAbstractMain* self);
	gboolean (*initialize_libraries) (BootstrapingprojectFactoriesAbstractMain* self, gchar*** args, int* args_length1);
	void (*initialize_services) (BootstrapingprojectFactoriesAbstractMain* self);
	gboolean (*parse_commandline) (BootstrapingprojectFactoriesAbstractMain* self, gchar*** args, int* args_length1);
	void (*set_options) (BootstrapingprojectFactoriesAbstractMain* self);
	void (*create_controller) (BootstrapingprojectFactoriesAbstractMain* self);
};

struct _BootstrapingprojectFactoriesFactory {
	GObject parent_instance;
	BootstrapingprojectFactoriesFactoryPrivate * priv;
};

struct _BootstrapingprojectFactoriesFactoryClass {
	GObjectClass parent_class;
};

struct _BootstrapingprojectMainController {
	GObject parent_instance;
	BootstrapingprojectMainControllerPrivate * priv;
	BootstrapingprojectWidgetsMainWindow* window;
};

struct _BootstrapingprojectMainControllerClass {
	GObjectClass parent_class;
};

struct _BootstrapingprojectSystemPaths {
	GObject parent_instance;
	BootstrapingprojectSystemPathsPrivate * priv;
};

struct _BootstrapingprojectSystemPathsClass {
	GObjectClass parent_class;
};

typedef enum  {
	BOOTSTRAPINGPROJECT_SYSTEM_LOG_LEVEL_VERBOSE,
	BOOTSTRAPINGPROJECT_SYSTEM_LOG_LEVEL_DEBUG,
	BOOTSTRAPINGPROJECT_SYSTEM_LOG_LEVEL_INFO,
	BOOTSTRAPINGPROJECT_SYSTEM_LOG_LEVEL_NOTIFY,
	BOOTSTRAPINGPROJECT_SYSTEM_LOG_LEVEL_WARN,
	BOOTSTRAPINGPROJECT_SYSTEM_LOG_LEVEL_ERROR,
	BOOTSTRAPINGPROJECT_SYSTEM_LOG_LEVEL_FATAL
} BootstrapingprojectSystemLogLevel;

struct _BootstrapingprojectSystemLogger {
	GObject parent_instance;
	BootstrapingprojectSystemLoggerPrivate * priv;
};

struct _BootstrapingprojectSystemLoggerClass {
	GObjectClass parent_class;
};

struct _BootstrapingprojectWidgetsMainWindow {
	GtkWindow parent_instance;
	BootstrapingprojectWidgetsMainWindowPrivate * priv;
};

struct _BootstrapingprojectWidgetsMainWindowClass {
	GtkWindowClass parent_class;
};

struct _BootstrapingprojectWidgetsCompositedWindow {
	GtkWindow parent_instance;
	BootstrapingprojectWidgetsCompositedWindowPrivate * priv;
};

struct _BootstrapingprojectWidgetsCompositedWindowClass {
	GtkWindowClass parent_class;
};


GType bootstrapingproject_factories_abstract_main_get_type (void) G_GNUC_CONST;
extern gchar* bootstrapingproject_factories_abstract_main_dock_path;
extern gboolean bootstrapingproject_factories_abstract_main_DEBUG;
extern gboolean bootstrapingproject_factories_abstract_main_VERBOSE;
gint bootstrapingproject_factories_abstract_main_run (BootstrapingprojectFactoriesAbstractMain* self, gchar*** args, int* args_length1);
void bootstrapingproject_factories_abstract_main_initialize_program (BootstrapingprojectFactoriesAbstractMain* self);
gboolean bootstrapingproject_factories_abstract_main_initialize_libraries (BootstrapingprojectFactoriesAbstractMain* self, gchar*** args, int* args_length1);
void bootstrapingproject_factories_abstract_main_initialize_services (BootstrapingprojectFactoriesAbstractMain* self);
gboolean bootstrapingproject_factories_abstract_main_parse_commandline (BootstrapingprojectFactoriesAbstractMain* self, gchar*** args, int* args_length1);
void bootstrapingproject_factories_abstract_main_set_options (BootstrapingprojectFactoriesAbstractMain* self);
void bootstrapingproject_factories_abstract_main_create_controller (BootstrapingprojectFactoriesAbstractMain* self);
BootstrapingprojectFactoriesAbstractMain* bootstrapingproject_factories_abstract_main_construct (GType object_type);
GType bootstrapingproject_factories_factory_get_type (void) G_GNUC_CONST;
extern BootstrapingprojectFactoriesAbstractMain* bootstrapingproject_factories_factory_main;
void bootstrapingproject_factories_factory_init (BootstrapingprojectFactoriesAbstractMain* main_class);
BootstrapingprojectFactoriesFactory* bootstrapingproject_factories_factory_new (void);
BootstrapingprojectFactoriesFactory* bootstrapingproject_factories_factory_construct (GType object_type);
GType bootstrapingproject_main_controller_get_type (void) G_GNUC_CONST;
GType bootstrapingproject_widgets_main_window_get_type (void) G_GNUC_CONST;
BootstrapingprojectMainController* bootstrapingproject_main_controller_new (void);
BootstrapingprojectMainController* bootstrapingproject_main_controller_construct (GType object_type);
GType bootstrapingproject_system_paths_get_type (void) G_GNUC_CONST;
void bootstrapingproject_system_paths_initialize (const gchar* app_name, const gchar* data_folder);
gboolean bootstrapingproject_system_paths_ensure_directory_exists (GFile* dir);
GFile* bootstrapingproject_system_paths_get_HomeFolder (void);
void bootstrapingproject_system_paths_set_HomeFolder (GFile* value);
GFile* bootstrapingproject_system_paths_get_DataFolder (void);
void bootstrapingproject_system_paths_set_DataFolder (GFile* value);
GFile* bootstrapingproject_system_paths_get_ThemeFolder (void);
void bootstrapingproject_system_paths_set_ThemeFolder (GFile* value);
GFile* bootstrapingproject_system_paths_get_ConfigHomeFolder (void);
void bootstrapingproject_system_paths_set_ConfigHomeFolder (GFile* value);
GFile* bootstrapingproject_system_paths_get_DataHomeFolder (void);
void bootstrapingproject_system_paths_set_DataHomeFolder (GFile* value);
GFile* bootstrapingproject_system_paths_get_CacheHomeFolder (void);
void bootstrapingproject_system_paths_set_CacheHomeFolder (GFile* value);
GeeArrayList* bootstrapingproject_system_paths_get_DataDirFolders (void);
void bootstrapingproject_system_paths_set_DataDirFolders (GeeArrayList* value);
GFile* bootstrapingproject_system_paths_get_AppConfigFolder (void);
void bootstrapingproject_system_paths_set_AppConfigFolder (GFile* value);
GFile* bootstrapingproject_system_paths_get_AppDataFolder (void);
void bootstrapingproject_system_paths_set_AppDataFolder (GFile* value);
GFile* bootstrapingproject_system_paths_get_AppThemeFolder (void);
void bootstrapingproject_system_paths_set_AppThemeFolder (GFile* value);
GFile* bootstrapingproject_system_paths_get_AppCacheFolder (void);
void bootstrapingproject_system_paths_set_AppCacheFolder (GFile* value);
GType bootstrapingproject_system_log_level_get_type (void) G_GNUC_CONST;
GType bootstrapingproject_system_logger_get_type (void) G_GNUC_CONST;
void bootstrapingproject_system_logger_initialize (const gchar* app_name);
void bootstrapingproject_system_logger_notification (const gchar* msg, const gchar* icon);
void bootstrapingproject_system_logger_verbose (const gchar* msg, ...);
BootstrapingprojectSystemLogLevel bootstrapingproject_system_logger_get_DisplayLevel (void);
void bootstrapingproject_system_logger_set_DisplayLevel (BootstrapingprojectSystemLogLevel value);
BootstrapingprojectWidgetsMainWindow* bootstrapingproject_widgets_main_window_new (BootstrapingprojectMainController* controller);
BootstrapingprojectWidgetsMainWindow* bootstrapingproject_widgets_main_window_construct (GType object_type, BootstrapingprojectMainController* controller);
GType bootstrapingproject_widgets_composited_window_get_type (void) G_GNUC_CONST;
BootstrapingprojectWidgetsCompositedWindow* bootstrapingproject_widgets_composited_window_new (void);
BootstrapingprojectWidgetsCompositedWindow* bootstrapingproject_widgets_composited_window_construct (GType object_type);
BootstrapingprojectWidgetsCompositedWindow* bootstrapingproject_widgets_composited_window_new_with_type (GtkWindowType window_type);
BootstrapingprojectWidgetsCompositedWindow* bootstrapingproject_widgets_composited_window_construct_with_type (GType object_type, GtkWindowType window_type);

extern const GOptionEntry BOOTSTRAPINGPROJECT_FACTORIES_ABSTRACT_MAIN_options[3];

G_END_DECLS

#endif
